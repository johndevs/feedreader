/*
 * Copyright 2017 John Ahlroos
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package fi.jasoft.feedreader.data;

import java.io.Serializable;
import java.util.List;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.ElementCollection;
import javax.persistence.Embedded;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Version;

/**
 * A RSS/ATOM feed
 * 
 * @author John Ahlroos / www.jasoft.fi
 */
@Entity
public class Feed implements Serializable{
	
	@Id 
	@GeneratedValue(strategy=GenerationType.SEQUENCE)
	long id;
	
	@Version 
	int version;
	
	@Column(length=256,nullable=false,unique=true) 
	String url;
	
	@ElementCollection 
	List<FeedEntry> entries;
	
	/**
	 * Get the URL identifying the feed
	 */
	public String getUrl() {
		return url;
	}

	/**
	 * Set the URL identifying the feed
	 * 
	 * @param url
	 * 		The url pointing to the online RSS/ATOM feed
	 */
	public void setUrl(String url) {
		this.url = url;
	}

	/**
	 * Get the entries of the of the feed
	 */
	public List<FeedEntry> getEntries() {
		return entries;
	}

	/**
	 * Set the entries of the feed. Usually this is done during synchronization
	 * 
	 * @param entries
	 * 		The entries of the feed
	 */
	public void setEntries(List<FeedEntry> entries) {
		this.entries = entries;
	}

	/**
	 * Get id identifying this feed. Autogenerated by JPA
	 * 
	 */
	public long getId() {
		return id;
	}

	/**
	 * Set id identifying this feed. Do not set manually, provided for JPA.
	 * 
	 * @param id
	 * 		The id of the feed
	 */
	public void setId(long id) {
		this.id = id;
	}

	/**
	 * Get the version of the feed. Used by JPA for optimistic locking.
	 */
	public int getVersion() {
		return version;
	}

	/**
	 * Set the version of the feed. Do not set manually, used by JPA for optimistic locking.
	 * 
	 * @param version
	 * 		The version of the feed
	 */
	public void setVersion(int version) {
		this.version = version;
	}
}
